{"version":3,"sources":["layout/Dashboard/components/navbar/Navbar.js","layout/Dashboard/components/History/History.js","layout/Dashboard/components/Balance.js","layout/Dashboard/components/Panel/Panel.js","layout/Dashboard/dashboard-routes.js","layout/Login/login-routes.js","App.js","serviceWorker.js","index.js","Auth.js","style.js"],"names":["Menu","history","Navbar","expand","className","Brand","to","fontSize","Toggle","aria-controls","Collapse","id","Nav","onClick","Auth","signout","push","History","props","map","message","i","key","firstname","lastname","action","toUpperCase","date","split","amount","currency","Balance","balance","Panel","Container","fluid","Row","Col","sx","holdings","crypto","DashboardRoutes","Component","component","rest","storage","localStorage","getItem","ENDPOINT","process","socket","socketIO","historyy","useHistory","useState","setBalance","React","setHistory","show","setShow","setHoldings","handleClose","axios","interceptors","request","use","a","config","token","checkTokenExpired","headers","idToken","decoded","jwt_decode","Date","now","useEffect","on","data","prev","off","logout","fetchBalance","method","url","then","response","catch","error","console","log","fetchHoldings","row","render","bind","Modal","onHide","backdrop","keyboard","centered","Header","closeButton","Title","Body","Footer","Button","variant","LoginRoutes","md","Index","lazy","Signup","Signin","Trade","Deposit","NoMatch","App","fallback","style","loadingStyle","CircularProgress","loadingIconStyle","path","exact","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","isAuthenticated","authenticate","email","setItem","this","removeItem","getAuth","getToken","module","exports","marginLeft","height","display","justifyContent","alignItems","background","color"],"mappings":"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","file":"static/js/main.edffd7da.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport AccountBalanceWalletOutlinedIcon from '@material-ui/icons/AccountBalanceWalletOutlined';\nimport RemoveFromQueueIcon from '@material-ui/icons/RemoveFromQueue';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Auth from '../../../../Auth';\nimport './Navbar.css';\n\nconst Menu = ({ history }) => {\n  return (\n    <>\n      <Navbar expand=\"md\">\n        <div className=\"navbar_top\">\n          <Navbar.Brand to=\"/dashboard/trade\">\n            <Link to=\"/dashboard/trade\">\n              <AllInclusiveIcon fontSize=\"large\" className=\"icon_logo\" />\n            </Link>\n          </Navbar.Brand>\n        </div>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <Nav className=\"mr-auto\">\n            <Link className=\"link mt-md-4\" to=\"/dashboard/trade\">\n              <span className=\"navbar_items\">\n                <AccountBalanceWalletOutlinedIcon\n                  fontSize=\"large\"\n                  className=\"icon\" />\n              </span>\n              <span className=\"navbar_items\">TRADE</span>\n            </Link>\n\n            <Link className=\"link\" to=\"/dashboard/deposit\">\n              <span className=\"navbar_items\">\n                <RemoveFromQueueIcon\n                  fontSize=\"large\"\n                  className=\"icon\"\n                />\n              </span>\n              <span className=\"navbar_items\">DEPOSIT</span>\n            </Link>\n\n            <Nav className=\"align_bottom\">\n              <span className=\"link\" onClick={() => {\n                Auth.signout();\n                history.push('/');\n              }}>\n                <span\n                  className=\"navbar_items\"\n                >\n                  <ExitToAppIcon\n                    fontSize=\"large\"\n                    className=\"icon\"\n                  />\n                </span>\n                <span className=\"navbar_items\">SIGN OUT</span>\n              </span>\n            </Nav>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n};\n\nexport default Menu;","import React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport './History.css';\n\nconst History = (props) => {\n  return (\n    <>\n      <div className=\"history_top\">\n        History\n      </div>\n\n      <div className=\"history_main\">\n        <Scrollbars>\n          {props.history.map((message, i) =>\n            message !== null ?\n              <div key={i} className=\"history_element\">\n                <h5>{message.firstname + ' ' + message.lastname}</h5>\n                <p>\n                  <span className={message.action === \"sold\" ? \"title_sold\" : \"title_purchased\"}>\n                    {message.action.toUpperCase()}\n                  </span> {message.date.split(\" \")[1]} </p>\n                < span > {message.amount} {message.currency}</span>\n              </div>\n              : null\n            )}\n        </Scrollbars>\n      </div>\n    </>\n  );\n};\n\nexport default History;\n\n","import React from 'react';\n\nconst Balance = (props) => {\n  return (\n    <>\n      <span>{props.balance}</span>\n    </>\n  );\n};\n\nexport default Balance;\n","import React from 'react';\nimport Balance from '../Balance';\nimport './Panel.css';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst Panel = (props) => {\n  return (\n    <Container fluid>\n      <Row className=\"panel_wrapper\">\n        <Col className=\"panel_element_start\" sx={6}>\n          <div className=\"panel_first\">\n            <span>{props.holdings[0].crypto ? props.holdings[0].crypto : \"0\"}</span>\n            <span className=\"panel_value\"> {props.holdings[0].amount ? props.holdings[0].amount : \"0\"}</span>\n          </div>\n          <div className=\"panel_second\">\n            <span>{props.holdings[1].crypto ? props.holdings[1].crypto : \"0\"}</span>\n            <span className=\"panel_value\"> {props.holdings[1].amount ? props.holdings[1].amount : \"0\"}</span>\n          </div>\n        </Col>\n        <Col className=\"panel_element_end\" sx={6}>\n          <div className=\"panel_balance\">\n            <span><Balance {...props} /> Kr</span>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Panel;","import { Route, useHistory } from 'react-router-dom';\nimport { Redirect } from 'react-router'\nimport { Modal } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport socketIO from 'socket.io-client';\nimport Navbar from './components/navbar/Navbar';\nimport History from './components/History/History';\nimport Panel from './components/Panel/Panel';\nimport Auth from \"../../Auth\";\nimport axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\nimport Button from 'react-bootstrap/Button';\nimport './Dashboard.css';\n\nconst DashboardRoutes = ({ component: Component, ...rest }) => {\n  const storage = localStorage.getItem('token');\n  const ENDPOINT = `${process.env.REACT_APP_BACKEND}/`;\n  const socket = socketIO(ENDPOINT)\n  const historyy = useHistory();\n  const [balance, setBalance] = useState(0);\n  const [history, setHistory] = React.useState([])\n  const [show, setShow] = useState(false);\n  const [holdings, setHoldings] = useState([\n    {\n      crypto: 'BitCoin',\n      amount: 0\n    },\n    {\n      crypto: 'BitConnect',\n      amount: 0\n    }\n  ]);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  axios.interceptors.request.use(\n    async config => {\n      let token = localStorage.getItem('token');\n      if (token) {\n        if (checkTokenExpired(token)) {\n          handleShow()\n        }\n      }\n      config.headers['token'] = token;\n      return config;\n  })\n\n  const checkTokenExpired = idToken => {\n    if (idToken) {\n      const decoded = jwt_decode(idToken);\n      if (decoded && decoded['exp']) {\n        return Date.now() - 1000 >= decoded['exp'] * 1000;\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket.on('history', (data) => {\n      setHistory(prev => [data, ...prev]);\n    })\n\n    return () => {\n      socket.off('history');\n    };\n  }, []);\n\n  const logout = () => {\n    Auth.signout();\n    historyy.push(\"/\");\n  };\n\n  const fetchBalance = () => {\n    axios({\n      method: 'get',\n      headers: { 'x-access-token': storage },\n      url: `${process.env.REACT_APP_BACKEND}/wallet/balance`\n    }).then(response => {\n      setBalance(response.data.response.balance);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const fetchHoldings = () => {\n    axios({\n      method: \"get\",\n      headers: { 'x-access-token': storage },\n      url: `${process.env.REACT_APP_BACKEND}/holdings/show`\n    }).then(response => {\n      console.log(\"VAD HÄNDER\", response)\n      setHoldings(response.data.row)\n    }).catch(error => {\n      console.error(error)\n    })\n  }\n\n  useEffect(() => {\n      fetchBalance()\n      fetchHoldings()\n  }, [storage]);\n\n  if (localStorage.getItem('token')) {\n    return (\n      <>\n        <Route {...rest} render={props => (\n          <section className=\"main hbox space-between\">\n            <nav>\n              <Navbar {...props} />\n            </nav>\n            <article>\n              <Panel {...props}\n                balance={balance}\n                holdings={holdings} \n              />\n              <Component { ...props }\n                balance={balance}\n                holdings={holdings}\n                history={history}\n                fetchBalance={fetchBalance.bind(this)}\n                fetchHoldings={fetchHoldings.bind(this)}\n              />\n            </article>\n            <aside className=\"historyPanel\">\n              <History \n                history={history}\n              />\n            </aside>\n            <Modal\n              show={show}\n              onHide={handleClose}\n              backdrop=\"static\"\n              keyboard={false}\n              centered\n              >\n              <Modal.Header closeButton>\n                <Modal.Title>Authenticate token expired.</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                Authenticate token expired.\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={logout}>\n                  Logout\n                </Button>\n                <Button variant=\"primary\">\n                  Stay logged in\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </section>\n        )} />\n      </>\n    );\n  } return <Redirect to='/' />;\n};\n\nexport default DashboardRoutes;","import React, { useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './Login.css';\nimport socketIO from 'socket.io-client';\n\nconst LoginRoutes = ({ component: Component, ...rest }) => {\n  const ENDPOINT = `${process.env.REACT_APP_BACKEND}/`;\n  const socket = socketIO(ENDPOINT);\n  \n  useEffect(() => {\n    return () => {\n      socket.off('history');\n      socket.off('crypto');\n    };\n  }, []);\n\n  if (!localStorage.getItem('token')) {\n    return (\n      <Route {...rest} render={props => (\n        <Container fluid>\n          <Row className=\"landing_page\">\n            <Col md={5} className=\"landing_page_left\">\n              <Component {...props} />\n            </Col>\n            <Col md={4} className=\"center\">\n              <AllInclusiveIcon fontSize=\"large\" className=\"landing_page_right\" />\n            </Col>\n          </Row>\n        </Container>\n      )} />\n    );\n  }\n\n  return <Redirect to='/dashboard/trade' />;\n};\n\nexport default LoginRoutes;","import React, { lazy, Suspense } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DashboardRoutes from './layout/Dashboard/dashboard-routes';\nimport LoginRoutes from './layout/Login/login-routes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\nimport { loadingStyle, loadingIconStyle } from './style';\n\nconst Index = lazy(() => import('./layout/Login/Index'));\nconst Signup = lazy(() => import('./layout/Login/Signup/Signup'));\nconst Signin = lazy(() => import('./layout/Login/Signin/Signin'));\nconst Trade = lazy(() => import('./layout/Dashboard/pages/trade/Trade'));\nconst Deposit = lazy(() => import('./layout/Dashboard/pages/Deposit/Deposit'));\nconst NoMatch = lazy(() => import('./404'));\n\nconst App = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <Suspense fallback={\n          <div style={loadingStyle}>\n            <h6>Loading... </h6>\n            <CircularProgress style={loadingIconStyle} />\n          </div>\n        }>\n          <Switch>\n            <LoginRoutes path=\"/crypto-trading \" exact component={Index} />\n            <LoginRoutes path=\"/crypto-trading/signup\" component={Signup} />\n            <LoginRoutes path=\"/crypto-trading/signin\" component={Signin} />\n            <DashboardRoutes path=\"crypto-trading/dashboard/trade\" component={Trade} />\n            <DashboardRoutes path=\"crypto-trading/dashboard/deposit\" component={Deposit} />\n            <Route component={NoMatch} />\n          </Switch>\n        </Suspense>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const Auth = {\n  isAuthenticated: false,\n  token: '',\n\n  authenticate(token, email) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('username', email);\n    this.token = token;\n    this.isAuthenticated = true;\n  },\n\n  signout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    \n    this.isAuthenticated = false;\n  },\n\n  getAuth() {\n    return this.isAuthenticated;\n  },\n\n  getToken() {\n    return this.token;\n  }\n};\nexport default Auth;\n","\nconst style = {\n  loadingIconStyle: {\n    marginLeft: '20px',\n  },\n  loadingStyle: {\n    height: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: '#2f303e',\n    color: 'lightgrey'\n  }\n};\n\n\nmodule.exports = style;"],"sourceRoot":""}